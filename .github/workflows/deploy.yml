name: Deploy Sileo Repo

on:
  push:
    branches:
      - main  # 监听 main 分支上的变化
    paths:
      - 'debs/**'  # 监听 debs 目录下的文件变化

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install dpkg-scanpackages
      run: sudo apt-get update && sudo apt-get install -y dpkg-dev

    - name: Ensure script has execute permissions
      run: chmod +x ./generate_packages.sh

    - name: Run generate_packages.sh
      run: bash ./generate_packages.sh

    - name: Generate new Packages file
      run: dpkg-scanpackages -m ./debs /dev/null > Packages.new

    - name: Merge Packages files
      run: |
        # Create a dictionary for the new packages
        declare -A new_packages

        # Read the new Packages file and store each package entry in the dictionary
        while read -r line; do
          if [[ $line == "Package:"* ]]; then
            current_package=$(echo $line | cut -d ' ' -f 2)
          fi
          new_packages[$current_package]+="$line"$'\n'
        done < Packages.new

        # Create a temporary file to store the merged result
        touch Packages.merged

        # Read the existing Packages file and update it with new package information
        while read -r line; do
          if [[ $line == "Package:"* ]]; then
            current_package=$(echo $line | cut -d ' ' -f 2)
            # If the current package exists in the new packages, replace the old entry
            if [[ -n "${new_packages[$current_package]}" ]]; then
              echo "${new_packages[$current_package]}" >> Packages.merged
              unset new_packages[$current_package]
              while read -r line && [[ -n "$line" ]]; do :; done
            fi
          fi
          echo "$line" >> Packages.merged
        done < Packages

        # Add any remaining new packages that were not in the existing Packages file
        for package in "${!new_packages[@]}"; do
          echo "${new_packages[$package]}" >> Packages.merged
        done

        mv Packages.merged Packages
        rm Packages.new

    - name: Commit and push updated Packages
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}  # 使用新的个人访问令牌
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git pull origin main  # 拉取远程更改
        git add Packages Packages.bz2 Packages.gz Release
        git commit -m "Update Packages files" || echo "No changes to commit"
        git push origin main || echo "Push failed"

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        personal_token: ${{ secrets.PAT }}  # 使用新的个人访问令牌
        publish_branch: gh-pages
        publish_dir: ./  # 确保你希望发布的内容在仓库根目录下
