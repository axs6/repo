name: Deploy Sileo Repo

on:
  push:
    branches:
      - main  # 监听 main 分支上的变化
    paths:
      - 'debs/**'  # 监听 debs 目录下的文件变化

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install dpkg-scanpackages
      run: sudo apt-get update && sudo apt-get install -y dpkg-dev

    - name: Ensure script has execute permissions
      run: chmod +x ./generate_packages.sh

    - name: Run generate_packages.sh
      run: bash ./generate_packages.sh

    - name: Generate new Packages file
      run: dpkg-scanpackages -m ./debs /dev/null > Packages.new

    - name: Merge Packages files
      run: |
        # Function to extract package names
        extract_package_name() {
          grep -E "^Package: " | awk '{print $2}'
        }

        # Read current Packages file into a map
        declare -A current_packages
        while IFS= read -r package_name; do
          current_packages["$package_name"]=$(awk -v package="$package_name" '$0 ~ "^Package: "package"$" {capture=1} capture {print} $0 ~ "^$" {capture=0}' Packages)
        done < <(awk '/^Package: / {print $2}' Packages)

        # Read new Packages file and merge with current packages
        while IFS= read -r package_name; do
          new_package_entry=$(awk -v package="$package_name" '$0 ~ "^Package: "package"$" {capture=1} capture {print} $0 ~ "^$" {capture=0}' Packages.new)
          current_packages["$package_name"]="$new_package_entry"
        done < <(awk '/^Package: / {print $2}' Packages.new)

        # Write merged Packages file
        : > Packages.merged
        for package in "${!current_packages[@]}"; do
          echo "${current_packages[$package]}" >> Packages.merged
        done

        mv Packages.merged Packages
        rm Packages.new

    - name: Compress Packages file
      run: |
        bzip2 -kf Packages
        gzip -kf Packages

    - name: Commit and push updated Packages
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}  # 使用新的个人访问令牌
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git pull origin main  # 拉取远程更改
        git add Packages Packages.bz2 Packages.gz
        git commit -m "Update Packages files" || echo "No changes to commit"
        git push origin main || echo "Push failed"

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        personal_token: ${{ secrets.PAT }}  # 使用新的个人访问令牌
        publish_branch: gh-pages
        publish_dir: ./  # 确保你希望发布的内容在仓库根目录下
